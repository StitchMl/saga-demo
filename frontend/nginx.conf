# Declaration of environment variables that Nginx should recognise.
# These are the names of the Docker containers or hosts that will be resolved.
# The defaults are the names of the services in a Docker Compose environment.
env ORCHESTRATOR_HOST;
env ORDER_SERVICE_CHOREO_HOST;
env PAYMENT_SERVICE_CHOREO_HOST;
env SHIPPING_SERVICE_CHOREO_HOST;

# Number of worker processes. Usually set to the number of CPU cores.
worker_processes 1;

# Configuration of connection events.
events {
    worker_connections 1024;
}

# Main HTTP blocking.
http {
    # Includes standard MIME types.
    include       mime.types;
    default_type  application/octet-stream;

    # Enable direct file sending for better performance.
    sendfile        on;
    # Timeout for keep-alive connections.
    keepalive_timeout  65;

    # Web server definition.
    server {
        listen 80; # Listen on door 80.

        root /usr/share/nginx/html; # Root directory for static files.
        index index.html; # Default file to be served.

        # DNS resolver for dynamic resolution of service hosts.
        # 127.0.11 is Docker's internal DNS server.
        # valid=30s indicates how long DNS responses are cached.
        resolver 127.0.0.11 valid=30s;

        # 1) Handling static files
        # Attempts to serve the requested file, otherwise directory, otherwise index.html
        # This is useful for single page applications (SPA) with client-side routing.
        location / {
            try_files $uri $uri/ /index.html;
        }

        # 2) Micro-services proxies
        # All requests to /saga are forwarded to the orchestrator.
        location /saga {
            # Defines the upstream variable using environment variables.
            # Nginx will resolve $ORCHESTRATOR_HOST dynamically using the resolver.
            set $orchestrator_upstream "http://${ORCHESTRATOR_HOST}:8080/saga";
            proxy_pass $orchestrator_upstream;
            proxy_http_version 1.1;
            proxy_set_header Connection ""; # Importante per connessioni keep-alive con upstream.
            # Basic security header.
            add_header X-Content-Type-Options nosniff; # Prevents MIME-sniffing.
            add_header X-Frame-Options DENY; # Prevents clickjacking.
        }

        # Proxy for choreographed order service.
        location /orders {
            set $order_choreo_upstream "http://${ORDER_SERVICE_CHOREO_HOST}:8081/orders";
            proxy_pass $order_choreo_upstream;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options DENY;
        }

        # Proxy for the choreographed payment service.
        location /pay {
            set $payment_choreo_upstream "http://${PAYMENT_SERVICE_CHOREO_HOST}:8082/pay";
            proxy_pass $payment_choreo_upstream;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options DENY;
        }

        # Proxy for the choreographed dispatch service.
        location /ship {
            set $shipping_choreo_upstream "http://${SHIPPING_SERVICE_CHOREO_HOST}:8083/ship";
            proxy_pass $shipping_choreo_upstream;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options DENY;
        }
    }
}