services:
  # RabbitMQ for Event-Bus communication
  rabbitmq:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    ports:
      - "5672:5672" # AMQP port for communication between services
      - "15672:15672" # Port for the management interface (RabbitMQ Management Plugin)
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - saga-network

  # ORCHESTRATOR SAGA SERVICES
  orchestrator-order-service:
    build:
      context: .
      dockerfile: orchestrator_saga/services/order_service/Dockerfile
    container_name: orchestrator_order_service
    ports:
      - "8081:8081"
    environment:
      - ORDER_SERVICE_PORT=8081
    networks:
      - saga-network

  orchestrator-inventory-service:
    build:
      context: .
      dockerfile: orchestrator_saga/services/inventory_service/Dockerfile
    container_name: orchestrator_inventory_service
    ports:
      - "8082:8082"
    environment:
      - INVENTORY_SERVICE_PORT=8082
    networks:
      - saga-network

  orchestrator-payment-service:
    build:
      context: .
      dockerfile: orchestrator_saga/services/payment_service/Dockerfile
    ports:
      - "8083:8083"
    container_name: orchestrator_payment_service
    networks:
      - saga-network

  # MAIN ORCHESTRATOR SERVICE
  orchestrator:
    build:
      context: .
      dockerfile: orchestrator_saga/Dockerfile
    container_name: orchestrator_main # This is the container name
    ports:
      - "8080:8080" # CORRECTED: Host port 8080 maps to container port 8080
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      ServerPort: 8080
      OrderServiceURL: http://orchestrator-order-service:8081
      InventoryServiceURL: http://orchestrator-inventory-service:8082
      PaymentServiceURL: http://orchestrator-payment-service:8083
    depends_on:
      rabbitmq:
        condition: service_healthy
      orchestrator-order-service:
        condition: service_started
      orchestrator-inventory-service:
        condition: service_started
      orchestrator-payment-service:
        condition: service_started
    networks:
      - saga-network

  # CHOREOGRAPHER SAGA SERVICES
  choreographer-order-service:
    build:
      context: .
      dockerfile: choreographer_saga/services/order_service/Dockerfile
    container_name: choreographer_order_service
    ports:
      - "8085:8080" # This maps container 8080 to host 8082. OK.
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      INVENTORY_SERVICE_URL: http://choreographer-inventory-service:8081 # This URL points to the internal network name and port, which is fine.
    depends_on:
      rabbitmq:
        condition: service_healthy
      choreographer-inventory-service:
        condition: service_started
    networks:
      - saga-network

  choreographer-inventory-service:
    build:
      context: .
      dockerfile: choreographer_saga/services/inventory_service/Dockerfile
    ports:
      - "8084:8081"
    container_name: choreographer_inventory_service
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - saga-network

  choreographer-payment-service:
    build:
      context: .
      dockerfile: choreographer_saga/services/payment_service/Dockerfile
    container_name: choreographer_payment_service
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - saga-network

  choreographer-auth-service:
    build:
      context: .
      dockerfile: choreographer_saga/services/auth_service/Dockerfile
    ports:
      - "8090:8090"
    environment:
      AUTH_SERVICE_PORT: 8090
    networks:
      - saga-network

  # Gateway API
  api-gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    ports:
      - "8000:8000"
    environment:
      ORDER_SERVICE_URL: http://choreographer-order-service:8080/create_order # This URL points to the internal network name and port, which is fine.
      AUTH_SERVICE_URL: http://choreographer-auth-service:8090
      GATEWAY_PORT: 8000
      CHOREOGRAPHER_ORDER_SERVICE_URL: http://choreographer-order-service:8080/create_order # Order Service URL of choreography
      ORCHESTRATOR_MAIN_SERVICE_URL: http://orchestrator:8080/create_order # URL of the main Orchestrator service
    depends_on:
      - choreographer-order-service
      - choreographer-auth-service
      - orchestrator
    networks:
      - saga-network
  frontend:
    image: node:20-alpine # Lightweight Node.js image for development
    container_name: saga-frontend
    working_dir: /app
    volumes:
      - ./frontend:/app # Mount the host's frontend folder in the container
    ports:
      - "8088:5173" # Default port of Screw
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0" # Install dependencies and start Vite
    depends_on:
      api-gateway:
        condition: service_started # Depends on the gateway to make requests
    networks:
      - saga-network

networks:
  saga-network:
    driver: bridge
    enable_ipv6: false

volumes:
  rabbitmq_data:
  rabbitmq_log: